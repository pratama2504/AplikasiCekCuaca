
import java.awt.Image;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import org.json.JSONObject;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author USER
 */
public class CekCuacaFrame extends javax.swing.JFrame {

    /**
     * Creates new form CekCuacaFrame
     */
    public CekCuacaFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelGambar = new javax.swing.JLabel();
        labelNamaCuaca = new javax.swing.JLabel();
        labelSuhuCuaca = new javax.swing.JLabel();
        txtNamaKota = new javax.swing.JTextField();
        cmbKotaFavorit = new javax.swing.JComboBox<>();
        btnCekCuaca = new javax.swing.JButton();
        btnLoadData = new javax.swing.JButton();
        btnSimpanData = new javax.swing.JButton();
        labelKeterangan = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 150));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama kota", "Nama cuaca", "Tambahan", "Suhu"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Aplikasi Cek Cuaca Sederhana"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nama kota:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Kota favorit:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(jLabel2, gridBagConstraints);

        labelGambar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelGambar.setText("gambar");
        labelGambar.setPreferredSize(new java.awt.Dimension(60, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(labelGambar, gridBagConstraints);

        labelNamaCuaca.setText("Nama cuaca...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(labelNamaCuaca, gridBagConstraints);

        labelSuhuCuaca.setText("Suhu cuaca...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(labelSuhuCuaca, gridBagConstraints);

        txtNamaKota.setPreferredSize(new java.awt.Dimension(120, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(txtNamaKota, gridBagConstraints);

        cmbKotaFavorit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Banjar", "Banjarmasin", "Banjarbaru" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(cmbKotaFavorit, gridBagConstraints);

        btnCekCuaca.setText("CEK CUACA");
        btnCekCuaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCekCuacaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(btnCekCuaca, gridBagConstraints);

        btnLoadData.setText("LOAD");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(btnLoadData, gridBagConstraints);

        btnSimpanData.setText("SIMPAN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(btnSimpanData, gridBagConstraints);

        labelKeterangan.setText("Keterangan tambahan...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        jPanel1.add(labelKeterangan, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCekCuacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCekCuacaActionPerformed
        cekCuaca();
    }//GEN-LAST:event_btnCekCuacaActionPerformed

    private void cekCuaca() {
        String API_KEY = "e57367f6bf9f06154278b83d65a4a557"; // Ganti dengan API Key OpenWeatherMap Anda
        String BASE_URL = "https://api.openweathermap.org/data/2.5/weather";
        String namaKota = txtNamaKota.getText();

        if (namaKota.isEmpty()) {
            showErrorDialog("Nama kota tidak boleh kosong!");
            return;
        }

        try {
            String endpoint = BASE_URL + "?q=" + namaKota + "&appid=" + API_KEY + "&units=metric";
            URL url = new URL(endpoint);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
            conn.setRequestMethod("GET");
            conn.setRequestProperty("Accept", "application/json");

            if (conn.getResponseCode() == 200) {
                BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                StringBuilder response = new StringBuilder();
                String inputLine;

                while ((inputLine = in.readLine()) != null) {
                    response.append(inputLine);
                }
                in.close();

                // Parse dan tampilkan hasil
                parseCuacaData(response.toString());
            } else {
                showErrorDialog("Gagal mengambil data. Periksa nama kota atau koneksi internet!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            showErrorDialog("Terjadi kesalahan: " + e.getMessage());
        }
    }

    private void parseCuacaData(String response) {
        try {
            JSONObject jsonObj = new JSONObject(response);
            String namaCuaca = jsonObj.getJSONArray("weather").getJSONObject(0).getString("main");
            String deskripsi = jsonObj.getJSONArray("weather").getJSONObject(0).getString("description");
            String ikon = jsonObj.getJSONArray("weather").getJSONObject(0).getString("icon");
            double suhu = jsonObj.getJSONObject("main").getDouble("temp");

            // Menampilkan data di label
            labelNamaCuaca.setText(namaCuaca + " - " + deskripsi);
            labelSuhuCuaca.setText("Suhu: " + suhu + "Â°C");

            // Menampilkan ikon cuaca
            String imageUrl = "https://openweathermap.org/img/wn/" + ikon + "@2x.png";
            setGambarCuaca(imageUrl);
        } catch (Exception e) {
            e.printStackTrace();
            showErrorDialog("Kesalahan parsing data: " + e.getMessage());
        }
    }

    private void setGambarCuaca(String imageUrl) {
        try {
            // Bersihkan ikon dan teks sebelum menampilkan yang baru
            labelGambar.setIcon(null);
            labelGambar.setText("Memuat...");

            // Muat gambar dari URL
            URL url = new URL(imageUrl);
            ImageIcon icon = new ImageIcon(url);

            // Sesuaikan ukuran gambar dengan ukuran label
            Image image = icon.getImage();
            Image scaledImage = image.getScaledInstance(labelGambar.getWidth(), labelGambar.getHeight(), Image.SCALE_SMOOTH);

            // Buat ImageIcon baru dengan gambar yang sudah diubah ukurannya
            ImageIcon scaledIcon = new ImageIcon(scaledImage);

            // Tampilkan ikon yang sudah diubah ukurannya
            labelGambar.setIcon(scaledIcon);
            labelGambar.setText(null);  // Hapus teks status
        } catch (Exception e) {
            e.printStackTrace();
            labelGambar.setIcon(null);
            labelGambar.setText("Gambar tidak tersedia.");
            showErrorDialog("Gagal memuat gambar: " + e.getMessage());
        }
    }

    private void showErrorDialog(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CekCuacaFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CekCuacaFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCekCuaca;
    private javax.swing.JButton btnLoadData;
    private javax.swing.JButton btnSimpanData;
    private javax.swing.JComboBox<String> cmbKotaFavorit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel labelGambar;
    private javax.swing.JLabel labelKeterangan;
    private javax.swing.JLabel labelNamaCuaca;
    private javax.swing.JLabel labelSuhuCuaca;
    private javax.swing.JTextField txtNamaKota;
    // End of variables declaration//GEN-END:variables
}
